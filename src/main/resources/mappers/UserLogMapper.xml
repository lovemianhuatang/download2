<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longwang.dao.UserLogMapper">
  <resultMap id="BaseResultMap" type="com.longwang.entity.UserLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <association property="sysUser" javaType="com.longwang.entity.SysUser" column="user_id" jdbcType="BIGINT" select="com.longwang.dao.SysUserMapper.selectByPrimaryKey" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.longwang.entity.UserLog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, ip, address, add_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.longwang.entity.UserLog">
    insert into user_log (id, user_id, ip, 
      address, add_time, content
      )
    values (#{id,jdbcType=BIGINT}, #{sysUser.id,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longwang.entity.UserLog">
    insert into user_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sysUser != null and sysUser.id != null">
        user_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sysUser != null and sysUser.id != null">
        #{sysUser.id,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longwang.entity.UserLog">
    update user_log
    <set>
      <if test="sysUser != null and sysUser.id != null">
        user_id = #{sysUser.id,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.longwang.entity.UserLog">
    update user_log
    set user_id = #{sysUser.id,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longwang.entity.UserLog">
    update user_log
    set user_id = #{sysUser.id,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findAll" resultMap="ResultMapWithBLOBs">
    select * from user_log order by add_time desc
  </select>

</mapper>